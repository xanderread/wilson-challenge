import { type GenerateContentResponse, GenerativeModel as VertexGenerativeModel, GenerativeModelPreview as VertexGenerativeModelPreview, type ModelParams as VertexModelParams, type StreamGenerateContentResult as VertexStreamGenerateContentResult } from "@google-cloud/vertexai";
import type { GeminiChatStreamResponse, IGeminiSession, VertexGeminiSessionOptions } from "./types.js";
import type { CompletionResponse, ToolCall } from "@llamaindex/core/llms";
export declare class GeminiVertexSession implements IGeminiSession {
    private vertex;
    private preview;
    constructor(options?: Partial<VertexGeminiSessionOptions>);
    getGenerativeModel(metadata: VertexModelParams): VertexGenerativeModelPreview | VertexGenerativeModel;
    getResponseText(response: GenerateContentResponse): string;
    getToolsFromResponse(response: GenerateContentResponse): ToolCall[] | undefined;
    getChatStream(result: VertexStreamGenerateContentResult): GeminiChatStreamResponse;
    getCompletionStream(result: VertexStreamGenerateContentResult): AsyncIterable<CompletionResponse>;
}
