import { AzureDynamicSessionTool } from "./AzureDynamicSessionTool.node.js";
import { WikipediaTool } from "./WikipediaTool.js";
export declare namespace ToolsFactory {
    type ToolsMap = {
        [Tools.Wikipedia]: typeof WikipediaTool;
        [Tools.AzureCodeInterpreter]: typeof AzureDynamicSessionTool;
    };
    export enum Tools {
        Wikipedia = "wikipedia.WikipediaToolSpec",
        AzureCodeInterpreter = "azure_code_interpreter.AzureCodeInterpreterToolSpec"
    }
    export function createTool<Tool extends Tools>(key: Tool, ...params: ConstructorParameters<ToolsMap[Tool]>): Promise<InstanceType<ToolsMap[Tool]>>;
    export function createTools<const Tool extends Tools>(record: {
        [key in Tool]: ConstructorParameters<ToolsMap[Tool]>[1] extends any ? ConstructorParameters<ToolsMap[Tool]>[0] : ConstructorParameters<ToolsMap[Tool]>;
    }): Promise<InstanceType<ToolsMap[Tool]>[]>;
    export {};
}
