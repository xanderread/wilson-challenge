import type { BaseNode } from "@llamaindex/core/schema";
import { ObjectType } from "@llamaindex/core/schema";
declare const TYPE_KEY = "__type__";
declare const DATA_KEY = "__data__";
export interface Serializer<T> {
    toPersistence(data: Record<string, unknown>): T;
    fromPersistence(data: T): Record<string, unknown>;
}
export declare const jsonSerializer: Serializer<string>;
export declare const noneSerializer: Serializer<Record<string, unknown>>;
type DocJson<Data> = {
    [TYPE_KEY]: ObjectType;
    [DATA_KEY]: Data;
};
export declare function isValidDocJson(docJson: any): docJson is DocJson<unknown>;
export declare function docToJson(doc: BaseNode, serializer: Serializer<unknown>): DocJson<unknown>;
export declare function jsonToDoc<Data>(docDict: DocJson<Data>, serializer: Serializer<Data>): BaseNode;
export {};
